Joaquin Alberto Andrada

import os

# Definimos la clase Pelicula, para representar cada pel√≠cula
class Pelicula:
    def __init__(self, nombre):
        self.__nombre = nombre

    def get_nombre(self):
        return self.__nombre

    def __str__(self):
        return self.__nombre

# Variables para el men√∫ de inicio
AGREGAR_PELICULA   = 1
LISTAR_PELICULAS   = 2
ELIMINAR_CATALOGO  = 3
SALIR              = 4

CATALOGO_ARCHIVO = "peliculas.txt"  # nombre del archivo que usaremos

# Funci√≥n: cargar todas las pel√≠culas que ya est√©n en "peliculas.txt"
def cargar_peliculas_desde_archivo():
    peliculas = []
    # Si el archivo no existe, devolvemos lista vac√≠a
    if not os.path.exists(CATALOGO_ARCHIVO):
        return peliculas

    with open(CATALOGO_ARCHIVO, "r", encoding="utf-8") as archivo:
        for linea in archivo:
            nombre = linea.strip()
            if nombre:
                peliculas.append(Pelicula(nombre))
    return peliculas

# Funci√≥n: guardar la lista completa de pel√≠culas en "peliculas.txt"
def guardar_peliculas_en_archivo(lista_peliculas):
    with open(CATALOGO_ARCHIVO, "w", encoding="utf-8") as archivo:
        for peli in lista_peliculas:
            archivo.write(peli.get_nombre() + "\n")

# Carga inicial: traemos del archivo cualquier pel√≠cula previa
peliculas = cargar_peliculas_desde_archivo()
opcion = 0

# Bucle del men√∫ principal
while opcion != SALIR:
    print("\n -Cat√°logo de Pel√≠culas-")
    print(f"{AGREGAR_PELICULA}. Agregar Pel√≠cula")
    print(f"{LISTAR_PELICULAS}. Listar Pel√≠culas")
    print(f"{ELIMINAR_CATALOGO}. Eliminar Cat√°logo")
    print(f"{SALIR}. Salir")

    try:
        opcion = int(input("Elige una opci√≥n: "))
    except ValueError:
        print("‚ö†Ô∏è Debes ingresar el n√∫mero correspondiente a cada opci√≥n.")
        continue

    #Opci√≥n 1: Agregar pel√≠cula
    if opcion == AGREGAR_PELICULA:
        nombre = input("Ingrese el nombre de la pel√≠cula: ").strip()
        if nombre:
            nueva = Pelicula(nombre)
            peliculas.append(nueva)
            guardar_peliculas_en_archivo(peliculas)
            print(f"‚úÖ Pel√≠cula '{nombre}' agregada al cat√°logo (y guardada en {CATALOGO_ARCHIVO}).")
        else:
            print("‚ö†Ô∏è No ingresaste ning√∫n nombre.")

    #Opci√≥n 2: Listar pel√≠culas
    elif opcion == LISTAR_PELICULAS:
        if peliculas:
            print("\nüé¨ Pel√≠culas en el cat√°logo:")
            for peli in peliculas:
                print(f"- {peli}")
        else:
            print("‚ö†Ô∏è El cat√°logo est√° vac√≠o (no hay pel√≠culas en memoria).")

    #Opci√≥n 3: Eliminar cat√°logo
    elif opcion == ELIMINAR_CATALOGO:
        confirm = input("¬øSeguro quer√©s borrar TODO el cat√°logo? (s/n): ").strip().lower()
        if confirm == "s":
            # Si existe el archivo, lo borramos
            if os.path.exists(CATALOGO_ARCHIVO):
                os.remove(CATALOGO_ARCHIVO)
            # Limpiamos la lista en memoria tambi√©n
            peliculas.clear()
            print(f"üóëÔ∏è Cat√°logo eliminado: se borr√≥ {CATALOGO_ARCHIVO} y la lista en memoria.")
        else:
            print("üîô No se elimin√≥ nada.")

    #Opci√≥n 4: Salir
    elif opcion == SALIR:
        print("üëã Saliendo del programa. ¬°Hasta pronto!")

    #Opci√≥n inv√°lida
    else:
        print("‚ö†Ô∏è Opci√≥n inv√°lida. Intenta de nuevo.")
